# Production Configuration
# Configurazione Produzione
# Generated at: 2025-01-27

spring:
  profiles:
    active: postgres
  
  # PostgreSQL Database Configuration / Configurazione Database PostgreSQL
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/course_management}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  # JPA/Hibernate Configuration / Configurazione JPA/Hibernate
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        use_sql_comments: false
        jdbc:
          time_zone: UTC
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
  
  # Security Configuration / Configurazione Sicurezza
  security:
    require-ssl: true
  
  # Cache Configuration / Configurazione Cache
  cache:
    type: redis
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
  
  # Mail Configuration / Configurazione Mail
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: ${MAIL_SSL_TRUST:}

# JWT Configuration / Configurazione JWT
app:
  jwt:
    secret: ${JWT_SECRET:}
    expiration: ${JWT_EXPIRATION:86400000}  # 24 hours / 24 ore
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}  # 7 days / 7 giorni

# Server Configuration / Configurazione Server
server:
  port: ${PORT:8080}
  servlet:
    context-path: ${CONTEXT_PATH:/}
  ssl:
    enabled: ${SSL_ENABLED:false}
    key-store: ${SSL_KEY_STORE:}
    key-store-password: ${SSL_KEY_STORE_PASSWORD:}
    key-store-type: ${SSL_KEY_STORE_TYPE:PKCS12}

# Logging Configuration / Configurazione Logging
logging:
  level:
    com.esame: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:logs/course-management.log}
    max-size: 100MB
    max-history: 30

# Management endpoints / Endpoint di gestione
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  health:
    db:
      enabled: true
    redis:
      enabled: true
