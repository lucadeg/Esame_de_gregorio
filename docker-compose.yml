version: '3.8'

services:
  # PostgreSQL Database / Database PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: course_management_db
    environment:
      POSTGRES_DB: course_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - course_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Backend / Backend Spring Boot
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: course_management_backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/course_management
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - course_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend / Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: course_management_frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - course_network
    environment:
      - VITE_API_URL=http://localhost:8080/api

volumes:
  postgres_data:

networks:
  course_network:
    driver: bridge
